
package Interfaz;

import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import Modelo.Grafo;
import Modelo.Relacion;
import Modelo.Usuario;
import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.SingleGraph;
import EDD.Lista;
import EDD.Nodo;


/**
*Interfaz gráfica, contiene el text field en donde se muestran datos y los distintos botones que nos permiten manejar el programa
*@author: Alessandra Torres
*@version: 26/10/23
 */
public class Interfaz extends javax.swing.JFrame {

    //Variables para control del sistema
    public static boolean archivoCargado;

    public Grafo grafo;// = new Grafo();
    public Graph graph;
    public String rutaAbsolutadeArchivo;

    public Lista<Usuario> cUsuarios;
    public Lista<Relacion> cRelaciones;

    public Interfaz() {
        archivoCargado = false;
        grafo = new Grafo();
        graph = new SingleGraph("embedded");
//        Viewer viewer = graph.display();
//        View view = (View) viewer.getDefaultView();
        graph.setAttribute(
                "ui.stylesheet",
                "node{\n"
                + "    size: 30px, 30px;\n"
                + "    fill-color: #05ffff;\n"
                + "    text-mode: normal; \n"
                + "}");
        initComponents();
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btcargararch = new javax.swing.JButton();
        btagregarusu = new javax.swing.JButton();
        bteliminarusu = new javax.swing.JButton();
        bteliminarconex = new javax.swing.JButton();
        mostrarusu = new javax.swing.JButton();
        mostrarconex = new javax.swing.JButton();
        btguardararch = new javax.swing.JButton();
        btagrefarconex = new javax.swing.JButton();
        tpInfo = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taListaUs = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taListaRel = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(173, 194, 216));

        btcargararch.setText("Cargar Archivo");
        btcargararch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcargararchActionPerformed(evt);
            }
        });

        btagregarusu.setText("Agregar Usuario");
        btagregarusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btagregarusuActionPerformed(evt);
            }
        });

        bteliminarusu.setText("Eliminar Usuario");
        bteliminarusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteliminarusuActionPerformed(evt);
            }
        });

        bteliminarconex.setText("Eliminar Conexión");
        bteliminarconex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteliminarconexActionPerformed(evt);
            }
        });

        mostrarusu.setText("Mostrar Usuarios");
        mostrarusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarusuActionPerformed(evt);
            }
        });

        mostrarconex.setText("Mostrar conexiones");
        mostrarconex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarconexActionPerformed(evt);
            }
        });

        btguardararch.setText("Guardar Archivo");
        btguardararch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btguardararchActionPerformed(evt);
            }
        });

        btagrefarconex.setText("Agregar Conexión");
        btagrefarconex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btagrefarconexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btcargararch, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btagregarusu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bteliminarusu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bteliminarconex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarusu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarconex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btguardararch, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btagrefarconex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(btcargararch)
                .addGap(18, 18, 18)
                .addComponent(btguardararch)
                .addGap(143, 143, 143)
                .addComponent(mostrarusu)
                .addGap(18, 18, 18)
                .addComponent(mostrarconex)
                .addGap(156, 156, 156)
                .addComponent(btagregarusu)
                .addGap(20, 20, 20)
                .addComponent(bteliminarusu)
                .addGap(18, 18, 18)
                .addComponent(btagrefarconex)
                .addGap(18, 18, 18)
                .addComponent(bteliminarconex)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        taListaUs.setColumns(20);
        taListaUs.setRows(5);
        jScrollPane2.setViewportView(taListaUs);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpInfo.addTab("Lista de Usuarios", jPanel2);

        taListaRel.setColumns(20);
        taListaRel.setRows(5);
        jScrollPane3.setViewportView(taListaRel);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE))
        );

        tpInfo.addTab("Lista de Relaciones", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tpInfo)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpInfo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    *Botón cargar archivos, se llama al método declarado anteriormente en operaciones cargarArchivo()
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void btcargararchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcargararchActionPerformed
       
        try{
        
                            taListaUs.setText("");
                            taListaRel.setText("");


                            Lista[] lista = Archivo.Operaciones.cargarArchivo();
                            cUsuarios = lista[0];
                            cRelaciones = lista[1];

                            //Agregar los usuarios a Graphstream
                            Nodo<Usuario> aux1 = cUsuarios.prim;
                            while (aux1 != null) {
                                graph.addNode(aux1.elem.usuario).setAttribute("ui.label", aux1.elem.usuario);
                                aux1 = aux1.sig;
                            }

                            Nodo<Relacion> aux2 = cRelaciones.prim;
                            while (aux2 != null) {
                                graph.addEdge((aux2.elem.usuarioOrig.usuario + aux2.elem.usuarioDest.usuario),
                                        aux2.elem.usuarioOrig.usuario, aux2.elem.usuarioDest.usuario,
                                        true);
                                aux2 = aux2.sig;
                            }

                            System.setProperty("org.graphstream.ui", "swing");
                            archivoCargado = true;
                            graph.display();    
                            
        }
        catch(Exception e){

        }
      
    }//GEN-LAST:event_btcargararchActionPerformed

   /**
    *Botón que muestra los usuarios en el text area
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void mostrarusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarusuActionPerformed

        taListaUs.setText("");
        tpInfo.setSelectedIndex(0);
        Nodo<Usuario> aux = cUsuarios.prim;
        while (aux != null) {
            taListaUs.append(aux.elem.usuario + "\n");
            aux = aux.sig;
        }

                                             
    }//GEN-LAST:event_mostrarusuActionPerformed
     /**
    *Botón que muestra las conexiones en el area
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void mostrarconexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarconexActionPerformed
        taListaRel.setText("");
        tpInfo.setSelectedIndex(1);
        Nodo<Relacion> aux = cRelaciones.prim;
        while (aux != null) {
            taListaRel.append(aux.elem.usuarioOrig.usuario + " " + aux.elem.usuarioDest.usuario + "\n");
            aux = aux.sig;
        }
    }//GEN-LAST:event_mostrarconexActionPerformed

     /**
    *Botón que agrega usuario, lo agrega en el arreglo y también en el gráfico con ayuda de GraphStream
    *@author: Luis Soriano
    *@version: 28/10/23
     */    
    private void btagregarusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btagregarusuActionPerformed

       try{ 
        
                    String nombreUsuario = JOptionPane.showInputDialog("Ingrese nombre de usuario sin el @:");
                    while (nombreUsuario.charAt(0)== '@'){
                        nombreUsuario = JOptionPane.showInputDialog("ERROR. Ingrese nombre de usuario sin el @:");
                    }
                        nombreUsuario = "@" + nombreUsuario;

                        cUsuarios.agregarElem(new Usuario(nombreUsuario));
                        graph.addNode(nombreUsuario).setAttribute("ui.label", nombreUsuario);
                        
       }
       catch (Exception e){
       
       }
    

    }//GEN-LAST:event_btagregarusuActionPerformed
    /**
    *Botón guardar archivo, crea un archivo vacio en la ruta del original y lee los arregloos de usuarios y relaciones con los cambios y los escribe.
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void btguardararchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btguardararchActionPerformed

            FileWriter fileWriter = null;
            try {
                fileWriter = new FileWriter(rutaAbsolutadeArchivo);

                fileWriter.write("usuarios" + "\n");
                int cont = 0;
                Nodo<Usuario> aux = cUsuarios.prim;
                while(aux != null){
                    fileWriter.append(aux.elem.usuario + "\n");
                    aux = aux.sig;
                }
                Nodo<Relacion> aux2 = cRelaciones.prim;
                fileWriter.append("relaciones" + "\n");
                while(aux2 != null){
                    fileWriter.append(aux2.elem.usuarioOrig.usuario + ", "+aux2.elem.usuarioDest.usuario );
                    aux2 = aux2.sig;
                }
 

            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (fileWriter != null) {
                        fileWriter.flush();
                        fileWriter.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
    }//GEN-LAST:event_btguardararchActionPerformed

    
       /**
    *Botón eliminar usuario, elimina el usuario deseado del txt, textarea de la interfaz, grafo y grafo de la interfaz
    *@author: Luis Soriano 
    *@version: 28/10/23
     */
    private void bteliminarusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteliminarusuActionPerformed
   
        try{
        
        
            String nombreUsuario = JOptionPane.showInputDialog("Ingrese nombre de usuario sin la @");
            while (nombreUsuario.charAt(0)== '@'){
                        nombreUsuario = JOptionPane.showInputDialog("ERROR. Ingrese nombre de usuario sin el @:");
                    }
            if (nombreUsuario != null) {
                nombreUsuario = "@" + nombreUsuario;


                cUsuarios.eliminarElemXnombre(new Usuario(nombreUsuario));
                taListaUs.setText("");
                graph.removeNode(nombreUsuario);

            }
            
        }
        catch(Exception e){
        
        }
        //}        // TODO add your handling code here:
    }//GEN-LAST:event_bteliminarusuActionPerformed

    
 /**
    *Boton agregar relacion 
    *@author: Luis Soriano
    *@version: 28/10/23
     */
    private void btagrefarconexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btagrefarconexActionPerformed

        try{
        
        
        String usOrigRel
        = (String) JOptionPane.showInputDialog(
                this,
                "Escriba el usuario origen sin @"

        );
        while (usOrigRel.charAt(0)== '@'){
                usOrigRel = JOptionPane.showInputDialog("ERROR. Ingrese nombre de usuario sin el @:");
            }
        usOrigRel = "@" + usOrigRel;

        if (usOrigRel != null) {

            String usDestRel
                    = (String) JOptionPane.showInputDialog(
                            this,
                            "Escriba el usuario destino sin la @"

                    );
        while (usDestRel.charAt(0)== '@'){
            usDestRel = JOptionPane.showInputDialog("ERROR. Ingrese nombre de usuario sin el @:");
            }
            
            usDestRel = "@" + usDestRel;


            cRelaciones.agregarElem(new Relacion(new Usuario(usOrigRel), new Usuario(usDestRel)));
            System.out.println(new Relacion(new Usuario(usOrigRel), new Usuario(usDestRel)));
            graph.addEdge(usOrigRel + usDestRel, usOrigRel, usDestRel, true);
            taListaRel.setText("");

        }
        
        
        
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_btagrefarconexActionPerformed

    
    /**
    *Boton eliminar relacion
    *@author: Luis Soriano
    *@version: 28/10/23
     */
    private void bteliminarconexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteliminarconexActionPerformed
       
        try{
        
        
                            String usOrigRel
                                    = (String) JOptionPane.showInputDialog(
                                            this,
                                            "Escriba el usuario origen sin @"

                                    );
                                    while (usOrigRel.charAt(0)== '@'){
                usOrigRel = JOptionPane.showInputDialog("ERROR. Ingrese nombre de usuario sin el @:");
            }
                            usOrigRel = "@" + usOrigRel;

                            if (usOrigRel != null) {


                                String usDestRel
                                        = (String) JOptionPane.showInputDialog(
                                                this,
                                                "Escriba el usuario destino sin la @"

                                        );
                                        while (usDestRel.charAt(0)== '@'){
                usDestRel = JOptionPane.showInputDialog("ERROR. Ingrese nombre de usuario sin el @:");
            }
                                usDestRel = "@" + usDestRel;

                                Relacion relacion = new Relacion(new Usuario (usOrigRel),new Usuario (usDestRel));
                                cRelaciones.eliminarElemXnombre(relacion);
                                graph.removeEdge(usOrigRel + usDestRel);
                                taListaRel.setText("");

                            }
                            
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_bteliminarconexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btagrefarconex;
    private javax.swing.JButton btagregarusu;
    private javax.swing.JButton btcargararch;
    private javax.swing.JButton bteliminarconex;
    private javax.swing.JButton bteliminarusu;
    private javax.swing.JButton btguardararch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton mostrarconex;
    private javax.swing.JButton mostrarusu;
    private javax.swing.JTextArea taListaRel;
    private javax.swing.JTextArea taListaUs;
    private javax.swing.JTabbedPane tpInfo;
    // End of variables declaration//GEN-END:variables
}
