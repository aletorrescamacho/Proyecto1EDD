/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.MultiGraph;
import org.graphstream.graph.implementations.SingleGraph;
import proyecto1edd.Lista;
import proyecto1edd.Grafo;

/**
*Interfaz gráfica, contiene el text field en donde se muestran datos y los distintos botones que nos permiten manejar el programa
*@author: Alessandra Torres
*@version: 26/10/23
 */
public class Interfaz extends javax.swing.JFrame {
    
    public Grafo grafo;
    public Graph graph;
    public String rutaAbsolutadeArchivo;
    public boolean archivoCargado = false;

    // Construcctor de la clase
    public Interfaz() {
        grafo = new Grafo();
        graph = new SingleGraph("embedded");
        initComponents();
    }
    
    // Mostrar el grafo con ayuda de GraphStream
    public void mostrarGrafo() {
        System.setProperty("org.graphstream.ui", "swing");
        graph.display();

    }
    
    /**
    *Método leer archivo, se selecciona el archivo con JFilechooser y luego se lee linea por linea para separarse en dos arreglos, uno con los usuarios y otro con laas relaciones, también se va agregando con GrapStream para ser mostrado
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    
     public void leerArchivo() {//Leer archivo implica reiniciar toda la memoria
        String stConjunto = null;
        JFileChooser fChooser;
        File fileOpened = null;
        Scanner in = null;
        try {
            fChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

            int returnValue = fChooser.showOpenDialog(null);
            //int returnValue = jfc.showSaveDialog(null);

            if (returnValue == JFileChooser.APPROVE_OPTION) {
                fileOpened = fChooser.getSelectedFile();
                System.out.println(fileOpened.getAbsolutePath());
                rutaAbsolutadeArchivo = fileOpened.getAbsolutePath();
            }
            in = new Scanner(fileOpened);
            while (in.hasNextLine()) {
                String linea;
                while (in.hasNextLine()) {
                    linea = in.nextLine();
                    if ('@' != linea.charAt(0)) {
                        stConjunto = linea.toUpperCase();
                    } else {
                        switch (stConjunto) {
                            case "USUARIOS":
                                grafo.agregarUsuario(linea);
                                graph.addNode(linea).setAttribute("ui.label", linea);
                                break;
                            case "RELACIONES":
                                String[] usOrigConcatUsDest = linea.split(",");
                                usOrigConcatUsDest[0] = usOrigConcatUsDest[0].strip();
                                usOrigConcatUsDest[1] = usOrigConcatUsDest[1].strip();
                                grafo.agregarRelacionAlArray(usOrigConcatUsDest, graph);
                                graph.addEdge(usOrigConcatUsDest[0] + usOrigConcatUsDest[1], usOrigConcatUsDest[0], usOrigConcatUsDest[1]);

                        }
                    }
                }
            }
        } catch (FileNotFoundException e) {
            System.out.println("Un error ha ocurrido.");
            e.printStackTrace();
        } catch (Exception e) {
            System.out.println("ha ocurrido un error");
            e.printStackTrace();
        } finally {
            archivoCargado = true;
            in.close();
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btcargararch = new javax.swing.JButton();
        btagregarusu = new javax.swing.JButton();
        btagrefarconex = new javax.swing.JButton();
        bteliminarusu = new javax.swing.JButton();
        bteliminarconex = new javax.swing.JButton();
        btmostrargraf = new javax.swing.JButton();
        mostrarmatady = new javax.swing.JButton();
        mostrarusu = new javax.swing.JButton();
        mostrarconex = new javax.swing.JButton();
        btguardararch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taNotePad = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(173, 194, 216));

        btcargararch.setText("Cargar Archivo");
        btcargararch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcargararchActionPerformed(evt);
            }
        });

        btagregarusu.setText("Agrgar Usuario");
        btagregarusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btagregarusuActionPerformed(evt);
            }
        });

        btagrefarconex.setText("Agregar Conexión");
        btagrefarconex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btagrefarconexActionPerformed(evt);
            }
        });

        bteliminarusu.setText("Eliminar Usuario");
        bteliminarusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteliminarusuActionPerformed(evt);
            }
        });

        bteliminarconex.setText("Eliminar Conexión");

        btmostrargraf.setText("Mostrar Grafo");
        btmostrargraf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmostrargrafActionPerformed(evt);
            }
        });

        mostrarmatady.setText("Mostrar matriz de Adyacencia");
        mostrarmatady.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarmatadyActionPerformed(evt);
            }
        });

        mostrarusu.setText("Mostrar Usuarios");
        mostrarusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarusuActionPerformed(evt);
            }
        });

        mostrarconex.setText("Mostrar conexiones");
        mostrarconex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarconexActionPerformed(evt);
            }
        });

        btguardararch.setText("Guardar Archivo");
        btguardararch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btguardararchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btcargararch, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btagregarusu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btagrefarconex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bteliminarusu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bteliminarconex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btmostrargraf, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarmatady, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarusu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarconex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btguardararch, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(btcargararch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mostrarusu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mostrarconex)
                .addGap(142, 142, 142)
                .addComponent(btmostrargraf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mostrarmatady)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btguardararch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(btagregarusu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bteliminarusu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btagrefarconex)
                .addGap(18, 18, 18)
                .addComponent(bteliminarconex)
                .addGap(80, 80, 80))
        );

        taNotePad.setColumns(20);
        taNotePad.setRows(5);
        jScrollPane1.setViewportView(taNotePad);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    *Botón cargar archivos, se llama al método declarado anteriormente leerarchivo()
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void btcargararchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcargararchActionPerformed

        graph.setAttribute(
                "ui.stylesheet",
                "node{\n"
                + "    size: 30px, 30px;\n"
                + "    fill-color: #10ff10;\n"
                + "    text-mode: normal; \n"
                + "}");
        grafo = new Grafo();
        taNotePad.setText("");
        leerArchivo();
        if (graph != null) {
            System.setProperty("org.graphstream.ui", "swing");
            graph.display();
        }       
    }//GEN-LAST:event_btcargararchActionPerformed

    /**
    *Botón que muestra la matriz en el textfield, esto se hace con ayuda del método imprimir matriz definido en la clase Grafo
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void mostrarmatadyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarmatadyActionPerformed
      if (archivoCargado) {
            if (Grafo.contUsuarios > 0) {
                grafo.imprimirMatriz(taNotePad);
            }
        }// TODO add your handling code here:                                              

    }//GEN-LAST:event_mostrarmatadyActionPerformed
    /**
    *Botón que muestra los usuarios en el textfield, esto se hace con ayuda del método imprimir usuarios definido en la clase Grafo
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void mostrarusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarusuActionPerformed
        taNotePad.setText("");
        grafo.imprimirUsuariosTaNotepad(taNotePad);
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarusuActionPerformed
     /**
    *Botón que muestra las conexiones en el textfield, esto se hace con ayuda del método imprimir Relaciones definido en la clase Grafo
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void mostrarconexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarconexActionPerformed
      taNotePad.setText("");
        grafo.imprimirRelacionesTaNotepad(taNotePad);
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarconexActionPerformed

     /**
    *Botón que agrega usuario, lo agrega en el arreglo y también en el gráfico con ayuda de GraphStream
    *@author: Alessandra Torres
    *@version: 26/10/23
     */    
    private void btagregarusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btagregarusuActionPerformed
      if (archivoCargado) {
      if (Grafo.contUsuarios >= 0) {
          String nombreUsuario = JOptionPane.showInputDialog("Ingrese nombre de usuario sin la @");
          if (nombreUsuario != null) {
              nombreUsuario = "@" + nombreUsuario;
              //agregar al arreglo
              grafo.agregarUsuario(nombreUsuario);
              //agregar al grafico
              graph.addNode(nombreUsuario).setAttribute("ui.label", nombreUsuario);
              //agregar al textfield
              taNotePad.setText("");
              grafo.imprimirUsuariosTaNotepad(taNotePad);

              System.out.println("gui 260 btAgregUsuario: contUsuarios: " + Grafo.contUsuarios);
          } 
      }
  }
    }//GEN-LAST:event_btagregarusuActionPerformed

    private void btmostrargrafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmostrargrafActionPerformed
       System.setProperty("org.graphstream.ui", "swing");
       graph.display();        
// TODO add your handling code here:
    }//GEN-LAST:event_btmostrargrafActionPerformed

    private void btagrefarconexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btagrefarconexActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_btagrefarconexActionPerformed
    /**
    *Botón guardar archivo, crea un archivo vacio en la ruta del original y lee los arregloos de usuarios y relaciones con los cambios y los escribe.
    *@author: Alessandra Torres
    *@version: 26/10/23
     */
    private void btguardararchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btguardararchActionPerformed
        if (archivoCargado) {
            if (Grafo.contUsuarios > 0) {
                FileWriter fileWriter = null;
                try {
                    fileWriter = new FileWriter(rutaAbsolutadeArchivo);
                    fileWriter.write("usuarios" + "\n");
                    int cont = 0;
                    for (String linea : grafo.arrUsuarios) {
                        fileWriter.append(linea + "\n");
                        cont++;
                        if (cont >= Grafo.contUsuarios) {
                            break;
                        }
                    }

                    fileWriter.append("relaciones" + "\n");
                    cont = 0;
                    for (String[] arrLinea : grafo.arrRelaciones2d) {

                        fileWriter.append(arrLinea[0] + ", " + arrLinea[1] + "\n");
                        cont++;
                        if (cont >= Grafo.contRelaciones) {
                            break;
                        }
                    }

                } catch (IOException ex) {
                    ex.printStackTrace();
                } finally {
                    try {
                        if (fileWriter != null) {
                            fileWriter.flush();
                            fileWriter.close();
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_btguardararchActionPerformed

    
       /**
    *Botón eliminar usuario, elimina el usuario deseado del txt, textarea de la interfaz, grafo y grafo de la interfaz.
    *@author: Luis Soriano y Alessandra Torres
    *@version: 26/10/23
     */
    private void bteliminarusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteliminarusuActionPerformed
        if (archivoCargado) {
            //array para usar con el joptionpane
            if (Grafo.contUsuarios > 0) {
                String[] arrNuevoUsuarios = new String[Grafo.contUsuarios];

                for (int i = 0; i < Grafo.contUsuarios; i++) {
                    arrNuevoUsuarios[i] = grafo.arrUsuarios[i];
                }

                String usuarioAEliminar = (String) JOptionPane.showInputDialog(                                
                                this, "Seleccione un usuario",
                                "Usuario a eliminar",
                                JOptionPane.INFORMATION_MESSAGE,
                                null/*icon*/,
                                arrNuevoUsuarios,
                                arrNuevoUsuarios[0]);
                if (usuarioAEliminar != null) {
                    grafo.eliminarUsuario(usuarioAEliminar);
                    graph.removeNode(usuarioAEliminar);
                    taNotePad.setText("");
                    grafo.imprimirUsuariosTaNotepad(taNotePad);
                }
            }
        }
    }//GEN-LAST:event_bteliminarusuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btagrefarconex;
    private javax.swing.JButton btagregarusu;
    private javax.swing.JButton btcargararch;
    private javax.swing.JButton bteliminarconex;
    private javax.swing.JButton bteliminarusu;
    private javax.swing.JButton btguardararch;
    private javax.swing.JButton btmostrargraf;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mostrarconex;
    private javax.swing.JButton mostrarmatady;
    private javax.swing.JButton mostrarusu;
    private javax.swing.JTextArea taNotePad;
    // End of variables declaration//GEN-END:variables
}
